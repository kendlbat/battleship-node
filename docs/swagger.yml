openapi: 3.0.3
info:
  title: Battleship API Docs
  description: |-
    This is the API documentation for the Multiplayer Battleship game.
    [kendlbat/battleship-node](https://github.com/kendlbat/battleship-node)
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: "1.0"
servers:
  - url: http://localhost:8080/api
tags:
  - name: game
    description: Game API
  - name: generic
    description: Other API endpoints
paths:
  /test:
    get:
      tags:
        - generic
      summary: Check whether API is working
      operationId: testApi
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the API
                    example: OK
                  timestamp:
                    type: number
                    description: Timestamp of the request in Unix millis
                    example: 1669546150442
              example:
                status: "ok"
                timestamp: 1669546150442
  /game/create:
    get:
      tags:
        - game
      summary: Creates a new game
      description: Can not be ran while in a valid game
      operationId: createGame
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the API
                    example: "ok"
                  gameId:
                    type: string
                    description: ID of the game
                    example: "797236-0"
                    pattern: "^[0-9]{6}-[0-9]$"
                  token:
                    type: string
                    description: Access token of the player
                    example: "74ce5fbf48f79de0"
                    pattern: "^[0-9a-f]{16}$"
              example:
                status: "ok"
                gameId: "797236-0"
                token: "74ce5fbf48f79de0"
        "400":
          description: Already in a game
  /game/join:
    get:
      tags:
        - game
      summary: Joins a game
      operationId: joinGame
      parameters:
        - name: gameId
          in: query
          description: Game id
          required: true
          schema:
            type: string
            pattern: "^[0-9]{6}-[0-9]$"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the API
                    example: "ok"
                  gameId:
                    type: string
                    description: ID of the game
                    example: "797236-0"
                    pattern: "^[0-9]{6}-[0-9]$"
                  token:
                    type: string
                    description: Access token of the player
                    example: "74ce5fbf48f79de0"
                    pattern: "^[0-9a-f]{16}$"
              example:
                status: "ok"
                gameId: "797236-0"
                token: "74ce5fbf48f79de0"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 400
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 400
                error: "Error message"

        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Error message"
  /game/status:
    get:
      tags:
        - game
      summary: Get current game status
      operationId: getGameStatus
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the API
                    example: "ok"
                  gameId:
                    type: string
                    description: ID of the game
                    example: "797236-0"
                    pattern: "^[0-9]{6}-[0-9]$"
                  turn:
                    type: number
                    description: Number of the player whose turn it is - 0 if game is not running
                    example: 1
                    enum:
                      - 0
                      - 1
                      - 2
                  state:
                    type: string
                    description: State of the game
                    enum:
                      - waiting
                      - starting
                      - playing
                      - finished
              examples:
                waiting:
                  summary: Game is waiting for players to join
                  value:
                    status: "ok"
                    state: "waiting"
                    turn: 0
                    gameId: "797236-0"
                starting:
                  summary: Game is waiting for players to place their ships
                  value:
                    status: "ok"
                    turn: 0
                    state: "starting"
                    gameId: "797236-0"
                playing:
                  summary: Game is running
                  value:
                    status: "ok"
                    turn: 1
                    state: "playing"
                    gameId: "797236-0"
                finished:
                  summary: Game is over
                  value:
                    status: "ok"
                    turn: 0
                    state: "finished"
                    gameId: "797236-0"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 400
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 400
                error: "Error message"
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 403
                  message:
                    type: string
                    description: Error message
                    example: "Not authorized"
              example:
                status: 403
                error: "Invalid token"
        "404":
          description: Game not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Game not found"
      security:
        - gameId: []
        - playerToken: []
  /game/getAvailableShips:
    get:
      tags:
        - game
      summary: Gets an array of unplaced ships
      operationId: getAvailableShips
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the API
                    example: "ok"
                  ships:
                    type: array
                    description: Array of unplaced ships
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: ID of the ship
                          example: "carrier"
                        length:
                          type: number
                          description: Length of the ship
                          example: 5
                          minimum: 1
              example:
                status: "ok"
                ships:
                  - id: "carrier"
                    size: 5
                  - id: "battleship"
                    size: 4
                  - id: "cruiser"
                    size: 3
                  - id: "submarine"
                    size: 3
                  - id: "destroyer"
                    size: 2
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 403
                  message:
                    type: string
                    description: Error message
                    example: "Invalid token"
              example:
                status: 403
                error: "Invalid token"
        "404":
          description: Game not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Game not found"
      security:
        - gameId: []
        - playerToken: []
  /game/placeShips:
    post:
      tags:
        - game
      summary: Place ships on the board
      description: The boards coordinates start at 0, 0<br>Normally, board is 8x8<br>Trying to send invalid ships will result in errors
      operationId: placeShips
      requestBody:
        description: Test
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Ship"
            example:
              ships:
                - x: 0
                  y: 0
                  orientation: "horizontal"
                  id: "carrier"
                  size: 5
                - x: 0
                  y: 3
                  orientation: "vertical"
                  id: "battleship"
                  size: 4
                - x: 3
                  y: 1
                  orientation: "horizontal"
                  id: "cruiser"
                  size: 3
                - x: 4
                  y: 6
                  orientation: "horizontal"
                  id: "submarine"
                  size: 3
                - x: 6
                  y: 1
                  orientation: "vertical"
                  id: "destroyer"
                  size: 2
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the API
                    example: "ok"
                  board:
                    $ref: "#/components/schemas/Board"
              example:
                status: "ok"
                board:
                  - [
                      true,
                      false,
                      false,
                      true,
                      true,
                      true,
                      true,
                      false,
                    ]
                  - [
                      true,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      true,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      true,
                      true,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      true,
                      true,
                      false,
                      false,
                      false,
                      false,
                      true,
                      false,
                    ]
                  - [
                      false,
                      true,
                      false,
                      false,
                      false,
                      false,
                      true,
                      false,
                    ]
                  - [
                      false,
                      true,
                      true,
                      false,
                      false,
                      false,
                      true,
                      false,
                    ]
                  - [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
        "400":
          description: Malfomed request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 400
                  message:
                    type: string
                    description: Error message
                    example: "Invalid ship"
              example:
                status: 400
                error: "Malformed request"
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 403
                  message:
                    type: string
                    description: Error message
                    example: "Invalid token"
              example:
                status: 403
                error: "Invalid token"
        "404":
          description: Game not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Game not found"
      security:
        - gameId: []
        - playerToken: []
  /game/getBoard:
    get:
      tags:
        - game
      summary: Gets the board of this player
      operationId: getBoard
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the API
                    example: "ok"
                  board:
                    $ref: "#/components/schemas/Board"
              example:
                status: "ok"
                board:
                  - [
                      true,
                      false,
                      false,
                      true,
                      true,
                      true,
                      true,
                      false,
                    ]
                  - [
                      true,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      true,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      true,
                      true,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      true,
                      true,
                      false,
                      false,
                      false,
                      false,
                      true,
                      false,
                    ]
                  - [
                      false,
                      true,
                      false,
                      false,
                      false,
                      false,
                      true,
                      false,
                    ]
                  - [
                      false,
                      true,
                      true,
                      false,
                      false,
                      false,
                      true,
                      false,
                    ]
                  - [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  - [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 403
                  message:
                    type: string
                    description: Error message
                    example: "Invalid token"
              example:
                status: 403
                error: "Invalid token"
        "404":
          description: Game not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Game not found"
      security:
        - gameId: []
        - playerToken: []
  /game/getBoardDimensions:
    get:
      tags:
        - game
      summary: Gets the dimensions of the board
      operationId: getBoardDimensions
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  width:
                    type: integer
                    example: 8
                  height:
                    type: integer
                    example: 8
              example:
                status: "ok"
                width: 8
                height: 8
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 403
                  message:
                    type: string
                    description: Error message
                    example: "Invalid token"
              example:
                status: 403
                error: "Invalid token"
        "404":
          description: Game not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Game not found"
      security:
        - gameId: []
        - playerToken: []
  /game/getGuesses:
    get:
      tags:
        - game
      summary: Gets the guesses of this player
      operationId: getGuesses
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  guesses:
                    type: array
                    items:
                      $ref: "#/components/schemas/Guess"
              example:
                status: "ok"
                guesses:
                  - x: 0
                    y: 0
                    hit: true
                  - x: 1
                    y: 0
                    hit: false
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 403
                  message:
                    type: string
                    description: Error message
                    example: "Invalid token"
              example:
                status: 403
                error: "Invalid token"
        "404":
          description: Game not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Game not found"
      security:
        - gameId: []
        - playerToken: []
  /game/getOpponentsGuesses:
    get:
      tags:
        - game
      summary: Gets the guesses of the opponent
      operationId: getOpponentsGuesses
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  guesses:
                    type: array
                    items:
                      $ref: "#/components/schemas/Guess"
              example:
                status: "ok"
                guesses:
                  - x: 0
                    y: 0
                    hit: true
                  - x: 1
                    y: 0
                    hit: false
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 403
                  message:
                    type: string
                    description: Error message
                    example: "Invalid token"
              example:
                status: 403
                error: "Invalid token"
        "404":
          description: Game not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Game not found"
      security:
        - gameId: []
        - playerToken: []
  /game/guess:
    post:
      tags:
        - game
      summary: Guesses a position on the board
      operationId: guess
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                x:
                  type: integer
                  example: 0
                  minimum: 0
                y:
                  type: integer
                  example: 0
                  minimum: 0
            example:
              x: 0
              y: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  result:
                    type: string
                    example: "hit"
                    enum:
                      - hit
                      - miss
                      - win
                  winner:
                    type: number
                    example: 2
                    enum:
                      - 1
                      - 2
                      - null
                    nullable: true
              examples:
                hit:
                  value:
                    status: "ok"
                    result: "hit"
                    winner: null
                miss:
                  value:
                    status: "ok"
                    result: "miss"
                    winner: null
                win:
                  value:
                    status: "ok"
                    result: "win"
                    winner: 1
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 403
                  message:
                    type: string
                    description: Error message
                    example: "Invalid token"
              example:
                status: 403
                error: "Invalid token"
        "404":
          description: Game not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Game not found"
      security:
        - gameId: []
        - playerToken: []
  /game/quit:
    get:
      tags:
        - game
      summary: Quits the game, forfeits the game if not over and clears auth cookies
      operationId: quit
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
              example:
                status: "ok"
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 403
                  message:
                    type: string
                    description: Error message
                    example: "Invalid token"
              example:
                status: 403
                error: "Invalid token"
        "404":
          description: Game not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the API
                    example: 404
                  message:
                    type: string
                    description: Error message
                    example: "Game not found"
              example:
                status: 404
                error: "Game not found"
      security:
        - gameId: []
        - playerToken: []

components:
  securitySchemes:
    gameId:
      type: apiKey
      in: cookie
      name: gameId
    playerToken:
      type: apiKey
      in: cookie
      name: token
  schemas:
    Ship:
      type: object
      properties:
        id:
          type: string
        x:
          type: integer
        y:
          type: integer
        orientation:
          type: string
          enum:
            - horizontal
            - vertical
        size:
          type: integer
    Board:
      type: array
      items:
        type: array
        items:
          type: boolean
    Guess:
      type: object
      properties:
        x:
          type: integer
        y:
          type: integer
        result:
          type: string
          enum:
            - hit
            - miss
